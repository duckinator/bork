Lint_task:
  persistent_worker: &linux
    isolation:
      container:
        image: python:3.12-slim
        cpu: 1
        memory: 512Mi

  install_script:
    - pip install -U --upgrade-strategy eager pip 'setuptools>61'
    - pip install .
    - pip install .[lint] .[test]
  script:
    - ruff --version
    - mypy --version
    - bork run lint

Zipapp_bootstrap_task:
  alias: Zipapp bootstraps
  persistent_worker: &linuxes
    isolation:
      container:
        cpu: 1
        memory: 512Mi
        matrix:
          - image: python:3.10-slim
          - image: python:3.11-slim
          - image: python:3.12-slim
          - image: python:3.13-rc-slim
  setup_script:
    - pip install -U --upgrade-strategy eager pip 'setuptools>61'
    - cp -r . /tmp/bork-pristine
    - cp -r /tmp/bork-pristine /tmp/pass1
    - cp -r /tmp/bork-pristine /tmp/pass2
    - cp -r /tmp/bork-pristine /tmp/pass3
  # Make sure Bork can build itself.
  pass_1_script:
    - cd /tmp/pass1
    - python3 --version
    - pip install . .[test]
    - bork build
  # Make sure the Bork zipapp from Pass 1 can build Bork.
  pass_2_script:
    - cd /tmp/pass2
    - cp /tmp/pass1/dist/bork-*.pyz /tmp/bork-pass1.pyz
    - python3 /tmp/bork-pass1.pyz build
  # Make sure the Bork zipapp built from Pass 2 can build Bork.
  # ime with other self-building software, this is prone to blowing up.
  pass_3_script:
    - cd /tmp/pass3
    - cp /tmp/pass2/dist/bork-*.pyz /tmp/bork-pass2.pyz
    - python3 /tmp/bork-pass2.pyz build
    - '[ -e ./dist/bork-*.pyz ]'

pytest_task:
  matrix:
    - persistent_worker: *linuxes
      env:
        PY: python3
      install_script:
        - apt-get update
        - apt-get install -y git

    - macos_instance:
        cpu: 1
        image: ghcr.io/cirruslabs/macos-runner:sonoma
      skip: true
      env:
        PATH: ${HOME}/.pyenv/shims:${PATH}
        PY: python3
      brew_update_script:
        - brew update
      brew_install_script:
        # Per the pyenv homebrew recommendations.
        #  https://github.com/pyenv/pyenv/wiki#suggested-build-environment
        - brew install pyenv git
      pyenv_install_script:
        - pyenv install 3:latest
        - pyenv global 3
        - pyenv rehash

    - freebsd_instance:
        image_family: freebsd-14-0
      skip: true
      env:
        matrix:
          - PYTHON: 3.10
          - PYTHON: 3.11
          # TODO: PYTHON: 3.12
      install_script:
        - PY=`echo python$PYTHON | tr -d '.'`
        - pkg install -y $PY git
        - $PY -m ensurepip

    - windows_container:
        image: cirrusci/windowsservercore:2019
      skip: true
      env:
        PY: C:\Python\python.exe
        matrix:
          - PYTHON: 3.10.11
          - PYTHON: 3.11.9
          - PYTHON: 3.12.4
      python_install_script:
        # https://docs.python.org/3.6/using/windows.html#installing-without-ui
        - ps: Invoke-WebRequest -Uri https://www.python.org/ftp/python/${env:PYTHON}/python-${env:PYTHON}-amd64.exe -OutFile C:\python-installer.exe
        - C:\python-installer.exe /quiet TargetDir=C:\Python SimpleInstall=1

  build_script:
    - $PY -m pip install -U --upgrade-strategy eager pip 'setuptools>61'
    - $PY -m pip install .[test]

  script:
    - $PY --version
    - bork run test
  always:
    upload_results_artifacts:
      path: ./bork-junit.xml
      format: junit
      type: text/xml

success_task:
  name: CI success
  persistent_worker:
    isolation:
      container: {image: "busybox"}
  depends_on:
    - Lint
    - pytest
    - Zipapp bootstraps

# If bork/version.py is modified on the main branch, make a release.
Release_task:
  persistent_worker: *linux
  only_if: "changesInclude('bork/version.py') && $BRANCH == 'main' && $CIRRUS_CRON == ''"
  depends_on: [CI success]
  env:
    BORK_PYPI_USERNAME: "__token__"
    BORK_PYPI_PASSWORD: ENCRYPTED[00007524e18bea7b59efea288653efa57b1dbd235ed8af00cc325febfc9076631a2bf58ed330d8fa7ca057adb81579b0]
    BORK_GITHUB_TOKEN: ENCRYPTED[29eac4d276e1e86020bbc415c04ce91136508e5bdeacd756310c32ebdd3fb7f910c6ed3159f08765915d9e656964e8f5]
  install_script:
    - apt-get update
    - apt-get install -y git
    - pip install -U --upgrade-strategy eager pip 'setuptools>61'
    - pip3 install . .[test]
  build_script:
    - bork clean
    - bork build
  test_script:
    - bork run test
  release_script:
    - bork release

# If there's a new tag, which should only happen after a successful release
# to PyPi, publish an image on Docker Hub.
docker_builder:
  only_if: $CIRRUS_TAG != ''
  name: "Release on Docker Hub"
  depends_on:
    - Release
  env:
    DOCKER_USERNAME: ENCRYPTED[a957943032559f0859a16a4421bc3602338080e6d9ce63a980db4fd34dbdc2afbe3a20c620139c669182eced4211a515]
    DOCKER_PASSWORD: ENCRYPTED[dd7f31d490b645298258ac9ec78ac3a7e034e8bfcf8fbfec0137787eef3934e01a42ef3b5eda42b1b1f7a3296fae619e]
  delay_script: sleep 10 # Attempt to ensure it is available via pip.
  build_script:
    - docker build --tag duckinator/bork:${CIRRUS_TAG} --tag duckinator/bork:latest --build-arg "VERSION=$(echo $CIRRUS_TAG | sed 's/^v//')" .
  login_script: docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
  push_tag_script: docker push duckinator/bork:$CIRRUS_TAG
  push_latest_script:
    - if grep -qE "^__version__\s+=\s+['\"]([0-9.]+)['\"]$" bork/version.py; then docker push duckinator/bork:latest; fi
